{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCsD/BC,EAjDG,SAACL,GACjB,MAAmCM,oBAAS,GAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAkBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,SAACC,GAAD,MAAY,kDACjD,cAAC,EAAD,UACE,uBAAMC,QAVa,WACrBP,GAAc,IASoBP,UAAWC,IAAQc,KAAMC,SApB7D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAY9C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAEtC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAEpC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAvBY,WAC1B7B,GAAc,IAsBgCP,UAAU,MAAlD,kC,gBC7BKqC,UAdE,WACb,MAA6BC,YAAQC,KAA9BC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OACbC,EAAUC,cAChBC,qBAAU,WACM,cAATH,GACCC,EAAQG,KAAK,aAEnB,CAACJ,EAAOC,IAId,OAAO,cAAC,EAAD,CAAWhB,UAAoB,YAATe,EAAoBlB,WAHtB,SAACuB,GACpBN,EAAYM","file":"static/js/4.44460d4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef,useState } from 'react';\nimport { Prompt } from 'react-router';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering,setIsEntering] = useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const onFocusHandler = ()=>{\n    setIsEntering(true)\n  }\n  const finishEnteringHandler=()=>{\n    setIsEntering(false)\n  }\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>'Are you sure, all entered data will be lost!'}/>\n    <Card>\n      <form onFocus = {onFocusHandler}className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\nimport { useHistory } from \"react-router\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\n\nconst NewQuote = ()=>{\n    const {sendRequest,status} = useHttp(addQuote);\n    const history = useHistory();\n    useEffect(()=>{\n        if(status==='completed'){\n            history.push('/quotes')\n        }\n    },[status,history])\n    const addQuoteHandler =(quoteData)=>{\n        sendRequest(quoteData)\n    }\nreturn <QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler}/>\n}\n\nexport default NewQuote;"],"sourceRoot":""}